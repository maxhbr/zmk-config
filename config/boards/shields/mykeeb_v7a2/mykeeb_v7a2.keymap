#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUM  1
#define WM  2

#define PTAB LC(PG_UP)
#define NTAB LC(PG_DN)

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

/ {
    combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
    };

    behaviors {
        // This is mod-tap with the "balanced" flavor.
        // Improves the '&mt RCTRL SPACE' behavior when typing quickly.
        bmt: balanced_mod_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "MOD_TAP";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <200>;
			bindings = <&kp>, <&kp>;
        };
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label= "BASE";
            bindings = <
//┏━━━━━━━━━━┳━━━━━━━━━━┓                                           ┏━━━━━━━━━━┓                                    ┏━━━━━━━━━━┓                                           ┏━━━━━━━━━━┳━━━━━━━━━━┓
  &kp ESC    &bootloader                                            &kp DEL                                         &kp BSPC                                               &none      &kp MINUS
//┣━━━━━━━━━━╋━━━━━━━━━━╋━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━╋━━━━━━━━━━┫                                    ┏━━━━━━━━━━╋━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━╋━━━━━━━━━━╋━━━━━━━━━━┫
  &kp TAB    &kp Q      &kp W       &kp E     &kp R      &kp T               /*┃                                    ┃*/       &kp Y       &kp U      &kp I      &kp O      &kp P      &kp LEFT_BRACKET
  &kp CAPS   &kp A      &kp S       &kp D     &kp F      &kp G      &kp TAB       /*━━━━━━┓              ┏━━━━━━*/  &kp TAB   &kp H       &kp J      &kp K      &kp L      &kp SEMI   &kp SQT
  &kp LSHFT  &kp Z      &kp X       &kp C     &kp V      &kp B      &kp LCTRL  &kp DEL                   &kp BSPC   &kp RCTRL &kp N       &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp RSHIFT
//┣━━━━━━━━━━╋━┳━━━━━━━━┻━━━━━┳━━━━━┻━━━━━━━━┳┻━━━━━━━━━━┻━━┳━━━━━━━━┻━━━━━┳━━━┻━━━━━━━━━━┫              ┣━━━━━━━━━━┻━━━┳━━━━━┻━━━━━━━━┳━━┻━━━━━━━━━━┻┳━━━━━━━━━┻━━━━┳━━━━━┻━━━━━━━━┳━╋━━━━━━━━━━┫
  &kp LALT     MO_TOG(NUM)    &lt NUM RET    &bmt LMETA RET &lt NUM RET    &mo WM                        &mo WM         &kp SPC        &bmt LMETA SPC &lt NUM RET    MO_TOG(NUM)      &kp RALT
//┗━━━━━━━━━━┛ ┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┛              ┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┛ ┗━━━━━━━━━━┛
                        >;
                };
        num_layer {
            label= "NUM";
            bindings = <
//┏━━━━━━━━━━┳━━━━━━━━━━┓                                           ┏━━━━━━━━━━┓                                    ┏━━━━━━━━━━┓                                           ┏━━━━━━━━━━┳━━━━━━━━━━┓
  &to BASE   &bt BT_CLR                                             &trans                                          &trans                                                 &none      &trans
//┣━━━━━━━━━━╋━━━━━━━━━━╋━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━╋━━━━━━━━━━┫                                    ┏━━━━━━━━━━╋━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━╋━━━━━━━━━━╋━━━━━━━━━━┫
  &trans     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5              /*┃                                    ┃*/        &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &trans
  &trans     &none      &kp PTAB   &kp PG_UP  &none      &none      &trans        /*━━━━━━┓              ┏━━━━━━*/  &trans     &kp PG_UP  &none      &kp UP     &none      &none      &trans
  &trans     &none      &kp NTAB   &kp PG_DN  &kp INS    &none      &trans     &trans                    &trans     &trans     &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &none      &trans
//┣━━━━━━━━━━╋━┳━━━━━━━━┻━━━━━┳━━━━━┻━━━━━━━━┳┻━━━━━━━━━━┻━━┳━━━━━━━━┻━━━━━┳━━━┻━━━━━━━━━━┫              ┣━━━━━━━━━━┻━━━┳━━━━━┻━━━━━━━━┳━━┻━━━━━━━━━━┻┳━━━━━━━━━┻━━━━┳━━━━━┻━━━━━━━━┳━╋━━━━━━━━━━┫
  &trans       trans          &trans         &trans         &trans         &to BASE                      &to BASE       &trans         &trans         &trans         &trans           &trans
//┗━━━━━━━━━━┛ ┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┛              ┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┛ ┗━━━━━━━━━━┛
                        >;
                };
        wm_layer {
            label= "WM"; 
            bindings = <
//┏━━━━━━━━━━┳━━━━━━━━━━┓                                           ┏━━━━━━━━━━┓                                    ┏━━━━━━━━━━┓                                           ┏━━━━━━━━━━┳━━━━━━━━━━┓
  &to BASE   &none                                                  &none                                           &none                                                  &none      &none
//┣━━━━━━━━━━╋━━━━━━━━━━╋━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━╋━━━━━━━━━━┫                                    ┏━━━━━━━━━━╋━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━╋━━━━━━━━━━╋━━━━━━━━━━┫
  &kp LG(TAB) &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &kp LG(N5)         /*┃                                    ┃*/        &kp LG(N6) &kp LG(N7) &kp LG(N8) &kp LG(N9) &kp LG(N0) &trans
  &none      &none      &none      &none      &none      &none      &none         /*━━━━━━┓              ┏━━━━━━*/  &none      &none      &none      &none      &none      &none      &none
  &trans     &none      &none      &none      &none      &none      &none      &none                     &none      &none      &none      &none      &kp LG(COMMA) &kp LG(DOT) &none  &trans
//┣━━━━━━━━━━╋━┳━━━━━━━━┻━━━━━┳━━━━━┻━━━━━━━━┳┻━━━━━━━━━━┻━━┳━━━━━━━━┻━━━━━┳━━━┻━━━━━━━━━━┫              ┣━━━━━━━━━━┻━━━┳━━━━━┻━━━━━━━━┳━━┻━━━━━━━━━━┻┳━━━━━━━━━┻━━━━┳━━━━━┻━━━━━━━━┳━╋━━━━━━━━━━┫
  &none        &none          &none          &none          &none          &to BASE                      &to BASE       &none          &none          &none          &none            &none
//┗━━━━━━━━━━┛ ┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┛              ┗━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━┛ ┗━━━━━━━━━━┛
                        >;
                };
        };
};
